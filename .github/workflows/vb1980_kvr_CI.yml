# Build from vb1980 kvr repo
# BY: TurBoTse

name: Build from vb1980 kvr repo

on: 
  workflow_dispatch:
    inputs:
#  schedule:                                                    # 自动编译
#    - cron: 0 19 * * *                                         # 每天国际时间19点，北京时间凌晨3点执行
  watch:                                                        # 监视操作
    types: [started]                                            # 点击 Star 之后
env:
  build_dir: /opt/padavan                                       # 源码目录
  images_dir: /opt/images                                       # 固件目录
  work_dir: /opt/padavan/trunk                                  # 工作目录
  config_dir: /opt/padavan/trunk/configs/templates              # 设备模板目录
  src_git: https://github.com/347919232/Padavan-KVR.git            # 源码地址

jobs:
  build:
    name: build
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id  # 自己点的 Star
    env:
      build_variant: ${{ matrix.build_variant }}
      targets: ${{ matrix.targets }}
    strategy:
      matrix:
        include:
          # - build_variant: "mt7621"
            # targets: "R2100"
          - build_variant: "mt7620"
            targets: "PSG1218"
    steps:
      - name: Checkout main            # 导入主分支
        uses: actions/checkout@v2
      - name: Prepare environment      # 准备编译环境
        run: |                         # 安装依赖包
          sudo apt update
          sudo apt install libtool-bin gperf python3-docutils autopoint gettext
          sudo timedatectl set-timezone 'Asia/Shanghai'  # 设置时区
      - name: Clone source code
        run: |                         # 克隆源码
          git clone --depth=1 $src_git $build_dir
      - name: Run shellcheck
        run: |
          cd $work_dir
          if [ -f ./tools/shellcheck.sh ]; then sh ./tools/shellcheck.sh; fi
      - name: Prepare toolchain
        run: |                         # 下载预编译的构建工具链
          mkdir -p $images_dir
          cd $build_dir/toolchain-mipsel
          sh dl_toolchain.sh
      - name: Set golang
        run: |
          cp -f vb1980/scripts/go.sh $(pwd)
          sudo chmod 777 ./go.sh
          bash ./go.sh
      - name: Set busybox's version to compile
        run: |
          cd $work_dir/user/busybox
          sed -i "s/SRC_NAME=busybox.*/SRC_NAME=busybox-1.24.x/g" ./Makefile
          cd $work_dir
          sed -i "s/busybox_id=\"1.34.1\"/busybox_id=\"1.24.x\"/g" ./build_firmware_modify
      - name: Start build firmware
        run: |                         # 执行构建固件
          cd $work_dir
          for m in $targets; do fakeroot ./build_firmware_ci $m; \
          if [ $? = 0 ]; then cp -f images/*.trx $images_dir/vb1980_${m}_$(date +%Y%m%d).trx; else exit 1; fi; \
          ./clear_tree_simple >/dev/null 2>&1; done
      - name: Upload images to Artifact
        if: ${{ success() }}
        uses: actions/upload-artifact@v2.2.1
        with:
          name: vb1980_3.4_kvr_${{ env.build_variant }}
          path: ${{ env.images_dir }}
      - name: Upload images to WeTransfer
        if: ${{ github.event.inputs.uploadwet == 'true' && success() }}
        run: |                         # 上传到 WeTransfer
          curl -fsSL git.io/file-transfer | sh
          ./transfer wet -s -p 16 --no-progress ${images_dir} 2>&1 | tee wetransfer.log
          echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
